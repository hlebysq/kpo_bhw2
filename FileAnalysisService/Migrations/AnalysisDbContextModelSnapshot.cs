// <auto-generated />
using FileAnalysisService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileAnalysisService.Migrations
{
    [DbContext(typeof(AnalysisDbContext))]
    partial class AnalysisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FileAnalysisService.Models.AnalysisRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnalysisResult")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CloudFileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalFileHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResultFileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OriginalFileHash")
                        .IsUnique();

                    b.HasIndex("ResultFileId");

                    b.ToTable("AnalysisResults");
                });

            modelBuilder.Entity("FileAnalysisService.Models.FileRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FileRecords");
                });

            modelBuilder.Entity("FileAnalysisService.Models.AnalysisRecord", b =>
                {
                    b.HasOne("FileAnalysisService.Models.FileRecord", "ResultFile")
                        .WithMany()
                        .HasForeignKey("ResultFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultFile");
                });
#pragma warning restore 612, 618
        }
    }
}
